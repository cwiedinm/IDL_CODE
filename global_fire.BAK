; ****************************************************************************
; GLOBAL FIRE EMISSIONS ESTIMATES FOR MOZART MODEL
; This program will calculate global daily fire emisisons
; This is the prototype for the MIRAGE and INTEX campaigns
; Developed by Christine Wiedinmyer, December 30, 2005
;
;Inputs to this model include 1 file with overlaid data:
; 1) Fire detections/locations/times from Rapid Response web site
; 2) MODIS Land Cover Type (MOD12C, using the IGBP land cover classification
;    available online at http://edcdaac.usgs.gov/modis/mod12c1v4.asp)
; 3) VCF % tree and % herbaceous data
; 4) Model domains for the MOZART and WRF-Chem simulations
;
; The emission factors, fuel laodings, and combustion efficiency are read into
;  the program from external files. The values are based on values from
;   Hoezelmann et al. [2004] and van der Werf [GFEDv2, 2005]
;   with the exception of croplands, where the fuel loading and emission
;   factors are taken from Wiedinmyer et al., submitted to AE.
; January 3, 2006: Checked all calculations and assignments by hand and they look
;   OK (see Check_outputs.xls)
; January 16, 2006: Running with 7-day file for North America to compare with the
;   North American model
; June 6, 2006: Edited the order of the variables read in to check for inaccuracies
;   in the tree and herb fractions!
; August 25, 2008: Edited program to create emission estimates for the AMAZE program
; 	downloaded the MODIS RR  June 18, 2008. Processed input file with global GIS model
; 	on August 25, 2008. Included the CONFIDENCE in the model input file (edited code here
; 	to remove all fires with CONF < 20
; September 18, 2008: rerunning MODIS RR for jan-april2008 due to problems with the original
;	files.
; October 02, 2008: Rerunning all emissions for January-April 2008 and for April-August 2008
; 	because first run estiamtes are 5 times higher than those from GFED. Today, only using
; 	detections from AQUA
; February 23-24, 2009: Editing the code to update to version 2.0 of the fire emissions model. These
; 	updates include:
; 		- moving the removal of the confidence < 20 earlier in the code
; 		- adding in Jay's code to get rid of overlapping fires
; 		- adding in the date and time in the output file (format = 2008-01-30,1830)
; 			NOTE: Printing out UTC time and JD (not local day/time)
; March 13, 2009; Running with the two files from 2008 (global files, one for JAN-APRIL and the
; 			second for MAY - SEPT)
; March 31, 2009: Created a sample input file (with 4 points) that I can use to check the output
; April 08, 2009: Checked the global model outputs with the regional model outputs. Global model is much higher
; 				than regional model outputs. Need to edit code to reduce the amount of Biomass burned
; 				and take into account the amount of vegetation at the surface (from the VCF)
; 		Edited this code for the following
;  		- changed the biomass that is output so that it is the burned biomass, not the total input
; 		- included the CF (combustion efficiency) calculation from regional model
; 		- also, assigns herbaceous fuels are automatically the grs fuel for the region. The coarse fuel
; 			is the fuel for the generic land cover
; JUNE 04, 2009: Updating code to test new LCT data
; 		- On June 04, added LCT2 to 2008 global input files (saved to D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2008\NEWLCT\)
; 		- Edited this code to read in new LCT values (not old ones).
; 		- Ran code. The extension on these files are 06040209 and newcode3
; JUNE 05, 2009:
; 		- Rerun the original (newcode2) and the newcode3 with new LCT values; put in new directory
; 		- New files have the extension "origLCT" and "NewLCT"
; JUNE 29, 2009:
; 		- Added PM2.5 and TPM to output file
; 		- Reran for the new LCT files (from June 05, 2009) (input field 13)
; JULY 02, 2009:
; 		- Edited to run the AUS/NZ files (changed input fields)
; AUGUST 12, 2009
; 		- Edited to Run Oct-Dec 2008
; 		- Edited to Run Jan-April 2009
;		- Edited to Run Jan-April 2007
; 		- Edited to Run May-Sept 2007
; 		- Edited to Run Oct-Dec 2007
; August 17, 2009
; 		- Edited to run May-Jul 2009
; *********************************************************************************************

pro global_fire

close, /all

 t0 = systime(1) ;Procedure start time in seconds
 ext = 'NEWLCT '
 year = ' '
 date1 = '08172009'
 yearnum= 2009

;read, 'for the output file name - what is the day (mmddyy)?', date1

; ****************************************************************************
; ASSIGN FUEL LOADS, EMISSION FACTORS FOR GENERIC LAND COVERS AND REGIONS
;   - created tables to be read in, instead of hardwiring the values here
; 08/25/08: Edited pathways here
; ****************************************************************************
;;   READ IN FUEL LOADING FILE
    fuelin = 'D:\Data2\wildfire\GLOBAL_MOZART\MODEL\INPUT\Model_inputs\fuelloads.csv'
    infuel=ascii_template(fuelin)
    fuel=read_ascii(fuelin, template=infuel)
;   Set up fuel arrays
       globreg2 = fuel.field1
       tffuel = fuel.field2  ;tropical forest fuels
       tefuel = fuel.field3  ;temperate forest fuels
       bffuel = fuel.field4  ;boreal forest fuels
       wsfuel = fuel.field5  ;woody savanna fuels
       grfuel = fuel.field6  ;grassland and savanna fuels
       ; NOTE: Fuels read in have units of g/m2 DM

;   READ IN EMISSION FACTOR FILE
    emisin = 'D:\Data2\wildfire\GLOBAL_MOZART\MODEL\INPUT\Model_inputs\emisfactor.csv'
    inemis=ascii_template(emisin)
    emis=read_ascii(emisin, template=inemis)
;   Set up Emission Factor Arrays
       vegemis = emis.field01   ; generic vegetation type --> this is ignored in model
       CO2EF = emis.field02     ; CO2 emission factor
       COEF = emis.field03      ; CO emission factor
       CH4EF = emis.field04     ; CH4 emission factor
       NMHCEF = emis.field05    ; NMHC emission factor
       H2EF = emis.field06      ; H2 emission factor
       NOXEF = emis.field07     ; NOx emission factor
       SO2EF = emis.field08     ; SO2 emission factor
       PM25EF = emis.field09    ; PM2.5 emission factor
       TPMEF = emis.field10     ; TPM emission factor
       TCEF = emis.field11      ; TC emission factor
       OCEF = emis.field12      ; OC emission factor
       BCEF = emis.field13      ; BC emission factor
       NH3EF = emis.field14     ; NH3 emission factor

print, "Finished reading in fuel and emission factor files"

; ****************************************************************************
; FIRE AND LAND COVER INPUT FILE
;   (this file should be created within ArcGIS)
; ****************************************************************************
    ; path for input file
;     inpath='D:\Data2\wildfire\AMAZE\MODIS_RR\global_april_aug2008\global_model\'
    ; input fire file

	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2009\GLOB_MAY_JUL082009.txt' ; RAN on AUG 17, 2009
;	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2007\GLOB_OCT_DEC2007.txt' ; RAN ON AUGUST 12, 2009
;	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2007\GLOB_MAY_SEP2007.txt' ; RAN ON AUGUST 12, 2009
;	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2007\GLOB_JAN_APR2007.txt' ; RAN ON AUGUST 12, 2009
; 	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2009\GLOB_JAN_APR2009.txt' ; RAN ON AUGUST 12, 2009
;	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2008\NEWLCT\GLOB_OCT_DEC2008.txt' ; RAN ON AUGUST 12, 2009
;	infile = 'D:\Data2\wildfire\MODEL_INPUTS\AUSTRAILIA\AUSNZ_JAN-MAR2009.txt' ; RAN ON JULY 02, 2009
; 	infile = 'D:\Data2\wildfire\AMAZE\MODIS_RR\Fire_model_inputs\global_Jan_APR2008.txt' ; rerun on 04/08/2009 with revised code to recalculate Biomass
;  	infile = 'D:\Data2\wildfire\AMAZE\MODIS_RR\Fire_model_inputs\global_MAY_SEP2008.txt' ; Run on 03/13/2009, rerun on 04/08/2009
 													; rerun on APril 09, 2009 with new code2
;   infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2008\NEWLCT\LCT_TREE_HERB_BARE_GLOBREG_LCT2.txt' ; this file ran on 06/05/2009
;	infile = 'D:\Data2\wildfire\MODEL_INPUTS\GLOBAL\2008\NEWLCT\LCT_TREE_HERB_BARE_GLOBREG2_LCT2.txt' ; this file ran on 06/05/2009
;   infile = 'D:\Data2\wildfire\AMAZE\ModelOutput\OUTPUT_03132009\check\sample_Input.csv' ; Ran on March 31, 2009 to check calculations

	;infile = ''
; 	infile = inpath+'Global_fire_input_Jan_Aug2008.txt'	; created this input file on 02.24.2009
;   infile = 'D:\Data2\wildfire\AMAZE\fire_input.txt'	; USED for TEST
;	infile = inpath+'fires_jan-april08_inputfile3.txt'
;	infile = 'D:\Data2\wildfire\AMAZE\MODIS_RR\global_april_aug2008\FireInput_file_091808_summerARCTAS.txt'
; 	infile = inpath+'Model_Input_Jan-April2008_AQUAonly.txt' ; created Oct. 02, 2008
;	infile = 'D:\Data2\wildfire\AMAZE\MODIS_RR\global_april_aug2008\FireInput_10022008_April-August2008_Aquaonly.txt' ; created 10/02/2008
;if infile eq '' then begin
;   print,'Select the input file: '
;   infile = dialog_pickfile(/noconfirm,/must_exist, $
;   title='SELECT INPUT FILE', $
;   filter='*.txt')
;   if infile eq '' then begin
;      print,'No file selected. Returning'
;      return
;   endif
;endif


; Read in FIRE FILE
; SKIP FIRST LINE WITH LABELS
        intemp=ascii_template(infile)
        map=read_ascii(infile, template=intemp)
; Get the number of fires in the file
        nfires = n_elements(map.field01)
		print, 'Finished reading input file'

    ; FIELDS IN INPUT FILE
    ; SET UP ARRAYS
; August 25, 2008: Here is the order of the input file:
; LATITUDE,LONGITUDE,SCAN,ACQDATE,CONFIDENCE,LCT,TREE,HERB,BARE,FID_glob_r,REGION,Region_num,
; September 18, 2008: Changed the order in which the input file3 for jan-april08 is read in:
; LATITUDE,LONGITUDE,BRIGHTNESS,TRACK,SCAN,ACQDATE,TIME,SATELLITE,CONFIDENCE,LCT,TREE,HERB,BARE,FID_glob_r,REGION,Region_num,POINT_X,
; Summer ARCTAS input file:
; SCAN,ACQDATE,TIME,CONFIDENCE,LONGITUDE,LATITUDE,LCT,TREE,HERB,BARE,REGION,Region_num,
; Oct. 02, 2008: Made specific to the new Aqua-only input files
; LATITUDE,SCAN,ACQDATE,CONFIDENCE,LCT,TREE,HERB,BARE,REGION,Region_num,POINT_X, (this is the Aqua-only file for Jan-April 2008)
; SCAN,ACQDATE,CONFIDENCE,LONGITUDE,LATITUDE,LCT,TREE,HERB,BARE,REGION,Region_num, (This is the Aqua-only file for April - August 2008)

; FEB. 24, 2009: File created has the following headers:
;  1     2     3      4    5           6          7     8       9   10   11  12    13     14
; TRACK,SCAN,ACQDATE,TIME,SATELLITE,CONFIDENCE,POINT_X,POINT_Y,LCT,TREE,HERB,BARE,REGION,Region_num,

; MARCH 13, 2009: Input files have the following headers
;     1      2        3     4    5       6      7        8   9    10   11   12     13
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,REGION,Region_num,

; JUNE 04, 2009: NEW HEADERS
;    1      2         3     4      5      6      7       8   9    10   11   12        13
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,REGION_NUM,LCT2, (this is the Jan-April file)
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,REGION_NUM,LCT2, (This is the May-sept file)
; Edited the field numbers accordingly

; JULY 02, 2009: HEADERS for the AUS/NZ files:
;    1      2         3     4      5      6      7       8   	  9   10   11   12        13		14
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME_,CONFIDENCE,LCTNEW,TREE,HERB,BARE,CNTRY_NAME,REGION,Region_num, (2003 File)
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME_,CONFIDENCE,LCT,   TREE,HERB,BARE,CNTRY_NAME,REGION,Region_num, (2009 File)
;
; Date in format '2003-01-12'
;*************************************************
; AUGUST 12, 2009: Headers for global files
;     1       2        3    4    5       6      7        8   9    10   11     12        13
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,CNTRY_NAME,Region_num, ; Oct-dec 2008
; Date has format "12/9/2008"
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,CNTRY_NAME,Region_num, ; Jan-Apr 2009
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,CNTRY_NAME,Region_num, ; Jan-Apr 2007
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,CNTRY_NAME,Region_num, ; May-Sept 2007
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,CNTRY_NAME,Region_num, ; Oct-Dec 2007
; LATITUDE,LONGITUDE,TRACK,SCAN,ACQDATE,TIME,CONFIDENCE,LCT,TREE,HERB,BARE,CNTRY_NAME,Region_num, ; May-jul 2009
; ************************************************
        lat1 = map.field01
        lon1 = map.field02
        spix1 = map.field04
        tpix1 = map.field03 ; TRACK, added on 02.23.2009
        date1 = map.field05
        time1 = map.field06 ; Added 02.24.2009
		CONF = map.field07     ; ADDED 08/25/08
        tree1 = map.field09*1.0
        herb1 = map.field10*1.0
        bare1 = map.field11*1.0
       ; LCT = field 08 for ORIGLCT, = field 13 for NEWLCT
        lct1 = map.field08		; Edited this on 06/04/2009 to read in LCT2
        						; Used field 13 on runs from June 29, 2009
        globreg1 = map.field13

; First, get rid of all fires with confidence less than 20%
; Added on 02.23.2009
		goodfires= where(conf gt 20)
		ngoodfires = n_elements(goodfires)
		lat =lat1(goodfires)
		lon = lon1(goodfires)
		date = date1(goodfires)
		spix = spix1(goodfires)
		tpix = tpix1(goodfires)
		tree = tree1(goodfires)
		herb = herb1(goodfires)
		bare = bare1(goodfires)
		lct = lct1(goodfires)
		globreg = globreg1(goodfires)
		time = time1(goodfires)

       print, 'Finished Reading Input file'
; Added 08/25/08: removed values of -9999 from VCF inputs
	misstree = where(tree lt 0)
	if misstree[0] ge 0 then tree(misstree) = 0.0
	missherb = where(herb lt 0)
	if missherb[0] ge 0 then herb(missherb) = 0.0
	missbare = where(bare lt 0)
	if missbare[0] ge 0 then bare(missbare) = 0.0


; Calculate the total cover from the VCF product
        totcov = tree+herb+bare
        missvcf = where(totcov lt 98.)
	    nummissvcf = n_elements(missvcf)

; Calculate the julian day for the fire detections
       numfire1 = n_elements(lat)
       jd = intarr(numfire1)
; COMMENTED OUT FOR TEST SESSION, 03/31/2009
  for i = 0L,numfire1-1 do begin
         parts =  strsplit(date[i],'/',/extract) ; ***** EDIT FOR DATE FORMAT!! ********
         day = fix(parts[1])
         month = fix(parts[0])
; for i = 0L,numfire1-1 do begin
;         parts =  strsplit(date[i],'/',/extract)
;         day = fix(parts[1])
;         month = fix(parts[0])
	if yearnum ne 2008 or yearnum ne 2004 then begin
         ; set julian date (NOT a leap year)
         if month eq 1 then daystart = 0
         if month eq 2 then daystart = 31
         if month eq 3 then daystart = (28+31)
         if month eq 4 then daystart = 90
         if month eq 5 then daystart = 120
         if month eq 6 then daystart = 151
         if month eq 7 then daystart = 181
         if month eq 8 then daystart = 212
         if month eq 9 then daystart = 243
         if month eq 10 then daystart = 273
         if month eq 11 then daystart = 304
         if month eq 12 then daystart = 334
         ntotdays = 365
	endif
	if yearnum eq 2008 or yearnum eq 2004 then begin
        ; set julian date (leap year)
         if month eq 1 then daystart = 0
         if month eq 2 then daystart = 31
         if month eq 3 then daystart = 60
         if month eq 4 then daystart = 91
         if month eq 5 then daystart = 121
         if month eq 6 then daystart = 152
         if month eq 7 then daystart = 182
         if month eq 8 then daystart = 213
         if month eq 9 then daystart = 244
         if month eq 10 then daystart = 274
         if month eq 11 then daystart = 305
         if month eq 12 then daystart = 335
         ntotdays = 366
	 endif
          jd[i] = day+daystart
  endfor

; Set up Counters
;   These are identifying how many fires are in urban areas,
;   or have unidentified VCF or LCT values -->
;   purely for statistics and quality assurance purposes
        lct0 = 0L
        spixct = 0L
        antarc = 0L
        allbare = 0L
        genveg0 = 0L
        bmass0 = 0L
        vcfcount = 0L
        vcflt50 = 0L
        confnum = 0L ; added 08/25/08
        overlapct = 0L ; added 02/29/2009
; ****************************************************************************
; OUTPUT FILE
; ****************************************************************************
    ; path for output file
        ;outpath='D:\Data2\wildfire\AMAZE\ModelOutput\OUTPUT_03132009\'
    ; output fire file
;   outfile = 'D:\Data2\wildfire\AMAZE\ModelOutput\OUTPUT_04082009\FireEmis_JAN_APR2008_global_04082009_newcode2.txt'
;   outfile = 'D:\Data2\wildfire\AMAZE\ModelOutput\OUTPUT_04082009\FireEmis_MAY_SEPT_2008_global_04082009_newcode2.txt'
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\JUNE052009\FireEmis_JAN_APR_2008_global_06052009_NEWLCT.txt' ; Running this one on 06/05/2009 with original and new LCT
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\JUNE052009\FireEmis_MAY_SEPT_2008_global_06NEW2009_NEWLCT.txt' ; Running this one on 06/05/2009 with original and new LCT
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\JUNE052009\FireEmis_MAY_SEPT_2008_global_06292009_ORIGLCT.txt' ; Running this one on 06/05/2009 with original and new LCT

;   outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\JUNE292009\FireEmis_MAY_SEPT_2008_global_06292009_NEWLCT.txt' ; Ran on 06/29/2009
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUSNZ\FireEmis_JAN_MAR_2009_AUSNZ_07022009.txt' ; Ran on July 02, 2009

; 	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUGUST2009\GLOB_OCT_DEC2008_FIREEMIS.txt' ; Ran on August 12, 2009
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUGUST2009\GLOB_JAN_APR2009_FIREEMIS.txt' ; Ran on August 12, 2009
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUGUST2009\GLOB_JAN_APR2007_FIREEMIS.txt' ; Ran on August 12, 2009
;	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUGUST2009\GLOB_MAY_SEP2007_FIREEMIS.txt' ; Ran on August 12, 2009
	outfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUGUST2009\GLOB_OCT_DEC2007_FIREEMIS.txt' ; Ran on August 12, 2009

     openw, 6, outfile
     print, 'opened output file: ', outfile
     printf, 6, 'j,longi,lat,day,TIME,lct,genLC,globreg,pct_tree,pct_herb,pct_bare,area,bmass,CO2,CO,OC,BC,NOx,NH3,SO2,VOC,CH4,PM25,TPM'
     form = '(I8,",",D20.10,",",D20.10,",",(8(I10,",")),2(D20.10,","),11(D25.10,","))'

    ; Print an output log file
    logfile = 'D:\Data2\wildfire\MODEL_OUTPUTS\GLOBAL\AUGUST2009\LOGFILES\logfile__08122009_GLOB_OCT_DEC07.txt'
       openw, 9, logfile
       print, 'SET UP OUTPUT FILES'
;***************************************************************************************
;ADDED JAY's code on 02.23.2009
;  FROM JAY'S CODE (11/03/2008)
	scale = 2.0 ; Point Response Function: scale effective pixel size
; ****************************************************************************************
; *********************************************************************
; JAY'S CODE FORE REMOVING DOUBLE DETECTIONS
;	added to fire emissions model v4.pro in November 2008
; 	Copied into this global model 02.23.2009 and edited accordingly
 	print, "Removing overlapping detections"
; First, set up flag array for each fire. Those that are overlaps will be assigned a value
; 	of -999 to be removed/skipped later on. Initially set to 1
	flag = intarr(ngoodfires)
	flag[*] = 1

; 	Set up parameters
		rearthkm=6371.
		dtor=!pi/180.
		earinc=23.5

	; Sort, to consider detects in order of largest to smallest pixel size
		areasav = TPIX * SPIX ; this is in km2 (size of pixel)
		; 12/08/2008 try sorting by date
		; index2 = sort(areasav); ; tested sorting by this on 02.20.2009- but not needed.
				; WATCH!! another variable called index is used below!! Do not use here.
		; Not sorting the arrays.
		datesav=jd;(index2) ; UTC day/time (02.24.2009)
  		latsav=lat;(index2)
  		lonsav=lon;(index2)
  		crosstracksav=TPIX;(index2)
  		alongtracksav=SPIX;(index2)

  ; reproject center of pixel
		xearth = fltarr(ngoodfires)
		yearth = fltarr(ngoodfires)
      	xearth=rearthkm*lonsav*dtor*cos(latsav*dtor)
      	yearth=rearthkm*latsav*dtor


  ; Loop over days. For each day, determine if a fire has any multiple detects, Flag multiple detects

	for m=1,ntotdays do begin ; do over each day of the year
		  	today = where(datesav eq m) ; pick out all fires that occur on selected julian day
		  	if today[0] eq -1 then goto, skipfire1 ; skip this day if no fires on that day
		  	numfirestoday = n_elements(today)
			;print, 'numfirestoday = ', numfirestoday

  			; Loop over all fires for that day
  			for n=0L,numfirestoday-1 do begin
  			;	print, 'n=,', n
  					if flag[today[n]] eq -999 then goto, skipfire2 ;skip fires already flagged on that day

     				;Crude accounting for Point Response Function: scale effective pixel size
    				crosstrack=crosstracksav[today[n]]*scale
    				alongtrack=alongtracksav[today[n]]*scale


    			; calculate lower and upper bounds of pixel for overlap
			      	dxdump = xearth[today[n]]+0.5*crosstrack
            		dydump = yearth[today[n]]+0.5*alongtrack
            		dxdumm = xearth[today[n]]-0.5*crosstrack
            		dydumm = yearth[today[n]]-0.5*alongtrack

					; find any other fires that fall within these bounds
					overlap = where(yearth[today] ge  dydumm and yearth[today] le dydump and xearth[today] ge dxdumm and xearth[today] le dxdump)
					if overlap[0] lt 0 then goto, skipfire1 ; something wrong? should at least overlap fire being looked at
					notsamefire = where(overlap gt n)
          			if notsamefire[0] gt -1 then flag[today[overlap[notsamefire]]] = -999 ; don't go back and reset earlier flag to -999
			skipfire2:
  			endfor ;End of loop over detects n for select day
		skipfire1:
	endfor		; End loop over days

print, 'Finished calculating overlapping fires'
    t1 = systime(1)-t0
    print,'Time done in'+ $
       strtrim(string(fix(t1)/60,t1 mod 60, $
       format='(i3,1h:,i2.2)'),2)+'.'
    junk = check_math() ;This clears the math errors
    print, ' This run was done on: ', SYSTIME()

; ****************************************************************************
; START LOOP OVER ALL FIRES: CALCULATE EMISSIONS
; ****************************************************************************
print, 'Starting to Calculate Emissions'

; Start loop over all fires in input file
for j =0L,ngoodfires-1 do begin ; edited this to have ngoodfires instead of nfires on 02.23.2009
;
; ##################################################
;   QA PROCEDURES FIRST
; ##################################################
;
; ON 02/23/2009: COMMENTED OUT HERE 1A) and 1): Taken care of confidence issues prior to this point
; and not going to use the SPIX removal now that we are taking care of the overlaps.
;; 1A) Get rid of all fires with confidence < 20 (ADDED 08/25/08)
;	if conf[j] lt 20 then begin
;		printf, 9, 'Fire number: ',j,' removed. Confidence = ', conf[j]
;		confnum = confnum+1
;		goto, skipfire
;	endif
;
;; 1) Get rid of fire detections where SPIX is loo large
;;   (Pixels too stretched and can lead to overlap)
;    if spix[j] gt 2.5 then begin
;       printf, 9, 'Fire number:',j,' removed. SPIX = ', spix[j]
;       spixct = spixct+1
;       goto, skipfire
;    endif

; REMOVAL (1)
; ADDING THE REMOVAL OF OVERLAPPING FIRES (02.23.2009)
; OVERLAPS:  don't calculate fires that have been flagged in the overlap process
	if flag[j] eq -999 then begin
		printf, 9, 'Fire number:',j,' removed because of overlap'
		overlapct = overlapct + 1
		goto, skipfire
	endif

; 1a) Skip any fires in Antarctica
       if globreg[j] eq 0 then begin
         printf, 9, 'Fire number:',j,' removed. Globveg = 0 (antarctica)'
         antarc = antarc+1
          goto, skipfire
        endif
; 2) Remove fires with no LCT assignment or in water bodies assigned by LCT
    if lct[j] ge 17 or lct[j] le 0 then begin
       printf, 9, 'Fire number:',j,' removed. LCT = ', lct[j]
       lct0 = lct0 + 1
       goto, skipfire
    endif
; 3) Correct for VCF product issues
;   3a) First, correct for GIS processing errors:
;    Scale VCF product to sum to 100.
        if totcov[j] gt 101. and totcov[j] lt 240. then begin
           vcfcount = vcfcount+1
           tree[j] = tree[j]*100./totcov[j]
           herb[j] = herb[j]*100./totcov[j]
           bare[j] = bare[j]*100./totcov[j]
           totcov[j] = bare[j] +herb[j] + tree[j]
        endif
        if totcov[j] lt 99. and totcov[j] ge 50. then begin
           vcfcount = vcfcount+1
           tree[j] = tree[j]*100./totcov[j]
           herb[j] = herb[j]*100./totcov[j]
           bare[j] = bare[j]*100./totcov[j]
           totcov[j] = bare[j] +herb[j] + tree[j]
        endif
       ;Second, If no data are assigned to the grid, then scale up, still
        if (totcov[j] lt 50. and totcov[j] ge 1.) then begin
            vcflt50  = vcflt50+1
            tree[j] = tree[j]*100./totcov[j]
            herb[j] = herb[j]*100./totcov[j]
            bare[j] = bare[j]*100./totcov[j]
            totcov[j] = bare[j] +herb[j] + tree[j]
        endif
;   3b) Fires with 100% bare cover or VCF not identified or total cover is 0,-9999:
;    reassign cover values based on LCT assignment
       if totcov[j] ge 240. or totcov[j] lt 1. or bare[j] eq 100 then begin ; this also include where VCF see water (values = 253)
         if lct[j] ge 15 then begin
          printf, 9, 'Fire number:',j,' removed. either 100% bare of VCF = 253 and LCT = ', lct[j]
          allbare = allbare+1
          goto, skipfire ; Skip fires that are all bare and have no LCT vegetation
         endif
         if lct[j] le 5 then begin    ; Assign forest to the pixel
          tree[j] = 60.
          herb[j] = 40.
          bare[j] = 0.
         endif
         if lct[j] ge 6 and lct[j] le 8 or lct[j] eq 11 or lct[j] eq 14 then begin    ; Assign woody savanna to the pixel
          tree[j] = 50.
          herb[j] = 50.
          bare[j] = 0.
         endif
         if lct[j] eq 9 or lct[j] eq 10 or lct[j] eq 12 or lct[j] eq 13 or lct[j] eq 16 then begin  ; Assign grassland to the pixel
          tree[j] = 20.
          herb[j] = 80.
          bare[j] = 0.
         endif
       endif

; ######################################################
; Assign Generic land cover to fire based on
;   global location and lct information
; ######################################################

; Generic land cover codes (genveg) are as follows:
;    1 = grasslands and svanna
;    2 = woody savanna
;    3 = tropical forest
;    4 = temperate forest
;    5 = boreal forest
;    9 = croplands
;    0 = no vegetation (should have been removed by now- but just in case...)
;
; 1) Grasslands and Savanna
    if lct[j] eq 9 or lct[j] eq 10 or lct[j] eq 16 then begin
        genveg = 1
        goto, endveg
    endif
; 2) Woody Savanna
    if lct[j] ge 6 and lct[j] le 8 or lct[j] eq 11 or lct[j] eq 14 then begin
        genveg = 2
        goto, endveg
    endif
; 3) Croplands
    if lct[j] eq 12 then begin
        genveg = 9
        goto, endveg
    endif
; 4) Urban
    if lct[j] eq 13 then begin ; then assign genveg based on VCF cover in the pixel
        if tree[j] lt 40 then begin
            genveg = 1              ; grasslands
         goto, endveg
       endif
        if tree[j] ge 40 and tree[j] lt 60 then begin
            genveg = 2  ; woody savannas
            goto, endveg
        endif
        if tree[j] ge 60 then begin                  ; assign forest based on latitude
            if lat[j] gt 60 or lat[j] lt -60 then begin
            genveg = 5
            goto, endveg
        endif else begin
            if lat[j] ge -30 and lat[j] le 30 then genveg = 3 else genveg = 4
            goto, endveg
        endelse
        endif
    endif
; 5) Forests (based on latitude)
    if lct[j] eq 1 or lct[j] eq 3 then begin
       if lat[j] gt 60 or lat[j] lt -60 then genveg = 5 else genveg = 4
       goto, endveg
    endif
    if lct[j] eq 2 or lct[j] eq 4 then begin
       if lat[j] ge -30 and lat[j] le 30 then genveg = 3 else genveg = 4
       goto, endveg
    endif
    if lct[j] eq 5 then begin
       if lat[j] gt 60 or lat[j] lt -60 then begin
         genveg = 5
         goto, endveg
       endif
       if lat[j] ge -30 and lat[j] le 30 then genveg = 3 else genveg = 4
    endif
endveg:

; ####################################################
; Assign Burning Efficiencies based on Generic
;   land cover (Hoezelmann et al. [2004] Table 5
; ####################################################
; Generic land cover codes (genveg) are as follows:
;    1 = grasslands and svanna
;    2 = woody savanna
;    3 = tropical forest
;    4 = temperate forest
;    5 = boreal forest
;    9 = croplands
;    0 = no vegetation (should have been removed by now- but just in case...)
; AS of April 09, 2009: not using these values in the code.
    if genveg eq 1 or genveg eq 9 then BE = 0.85 ; Grasslands, savannah, crop
    if genveg eq 2 then BE = 0.6				 ; Woody Savannah
    if genveg ge 3 and genveg le 5 then BE = 0.5 ; Forest


; ####################################################
; Estimate Area burned (km2) using the VCF product
; ####################################################
        area = 1.0 ; Units = km2
      ;adjust this to fraction of the pixel that is not bare
        area= area*((100.-bare[j])/100.)

; ####################################################
; Assign Fuel Loads based on Generic land cover
;   and global region location
;   units are in g dry mass/m2
; ####################################################

    reg = globreg[j]-1   ; locate global region, get index
;    if reg[0] eq -1 then begin
;       printf, 9, 'Fire number:',j,' removed. Something is WRONG with global regions and fuel loads. Globreg =', globreg[j]
;       goto, skipfire
;    endif
;      globreg2 = fuel.field1
;       tffuel = fuel.field2  ;tropical forest fuels
;       tefuel = fuel.field3  ;temperate forest fuels
;       bffuel = fuel.field4  ;boreal forest fuels
;       wsfuel = fuel.field5  ;woody savanna fuels
;       grfuel = fuel.field6  ;grassland and savanna fuels
;       ; NOTE: Fuels read in have units of g/m2 DM

; April 08, 2009: Edited this to say "Bmass1" not "Bmass"
; 	Bmass now gets calculated as a function of tree cover, too.
    if genveg eq 9 then bmass1 = 500.
    if genveg eq 1 then bmass1 = grfuel[reg]
    if genveg eq 2 then bmass1 = wsfuel[reg]
    if genveg eq 3 then bmass1 = tffuel[reg]
    if genveg eq 4 then bmass1 = tefuel[reg]
    if genveg eq 5 then bmass1 = bffuel[reg]
    if genveg eq 0 then begin
       printf, 9, 'Fire number:',j,' removed. Something is WRONG with generic vegetation. genveg = 0'
       genveg0 = genveg0 + 1
       goto, skipfire
    endif
    if bmass1 eq -1 then begin
        printf, 9, 'Fire number:',j,' removed. bmass assigned -1! FID = ', map.field01[j]
        printf, 9, '    genveg =', genveg, ' and globreg = ', globreg[j], ' and reg = ', reg
        print, 'Fire number:',j,' removed. bmass assigned -1! FID = ', map.field01[j]
        print, '    genveg =', genveg, ' and globreg = ', globreg[j], ' and reg = ', reg
        bmass0 = bmass0+1
       goto, skipfire
    endif
; *****************************************************************************************
; April 08, 2009: Copied code from Regional model to better simulate the combustion efficiency
; 	and overall biomass burned.

; ASSIGN CF VALUES (Combustion Factors)
    if (tree[j] gt 60) then begin      ;FOREST
    ; Values from Table 3 Ito and Penner [2004]
        CF1 = 0.30          ; Live Woody
        CF3 = 0.90          ; Leafy Biomass
        CF4 = 0.90          ; Herbaceous Biomass
        CF5 = 0.90          ; Litter Biomass
        CF6 = 0.30          ; Dead woody
    endif
    if (tree[j] gt 40) and (tree[j] le 60) then begin   ;WOODLAND
       CF3 = exp(-0.013*(tree[j]/100.))     ; Apply to all herbaceous fuels
       CF1 = 0.30                   ; Apply to all coarse fuels in woodlands
                             ; From Ito and Penner [2004]
    endif
    If (tree[j] le 40) then begin       ;GRASSLAND
       CF3 = 0.98 ;Range is between 0.44 and 0.98 - Assumed UPPER LIMIT!
    endif
; *******************************************************************************************
; Calculate the Mass burned of each classification (herbaceous, woody, and forest)
; These are in units of kg dry matter/m2
; Bmass is the total burned biomass
; Mherb is the Herbaceous biomass burned
; Mtree is the Woody biomass burned

    pctherb = herb[j]/100.
    pcttree = tree[j]/100.
    herbbm = grfuel[reg]
    coarsebm = bmass1

; NOT INCLUDING STUMP WOOD RIGHT NOW
; Bmass = biomass burned in fire

;  Grasslands
if tree[j] le 40 then begin
    Bmass = (pctherb*herbbm*CF3)+(pcttree*herbbm*CF3)
    ; Assumed here that litter biomass = herbaceous biomass and that the percent tree
    ;   in a grassland cell contributes to fire fuels... CHECK THIS!!!
    ; Assuming here that the duff and little around trees burn
endif

; Woodlands
if (tree[j] gt 40) and (tree[j] le 60) then begin
       Bmass = (pctherb*herbbm*CF3) + (pcttree*(herbbm*CF3+coarsebm*CF1))
endif

; Forests
if tree[j] gt 60 then begin
       Bmass = (pctherb*herbbm*CF3) + (pcttree*(herbbm*CF3+coarsebm*CF1))
endif

; ####################################################
; Assign Emission Factors based on Generic land cover
; ####################################################
    ; assign index for emission factors
    if genveg eq 1 or genveg eq 2 then index = 0 ; grasslands & savannas
    if genveg eq 3 then index = 1 ; tropical forests
    if genveg eq 4 or genveg eq 5 then index = 2 ; extratropical forests
    if genveg eq 9 then index = 3 ; Crops

; ####################################################
; Calculate Emissions
; ####################################################
; Emissions = area*BE*BMASS*EF
    ; Convert units to consistent units
     area = area*1.0e6 ; convert km2 --> m2
     bmass = bmass/1000. ; convert g dm/m2 to kg dm/m2

    ; Calculate emissions (kg)
; #######READ THIS ###########
  ; Specific to MOZART modeling and using 7-day total fire counts!!!!
    ; NOTE: Since reading in the 7-day total fires from teh rapid response:
    ; need to scale emissions down. Doing so by dividing by 3.5:
    ;  (added 01/17/06)
    ; 02/01/2005: Going to chose the daily average for the entire 7 days...
    ; but need to calculate in second program- not here!!  here, have all fires
    ; have their original estimates (factor = 1)

; 04/09/2009 : removed BE from these equations (commented out)
; 	 Bmass is now calculated to include BE
       factor = 1.
;       CO2 = CO2EF[index]*area*BE*bmass/1000./factor
;       CO = COEF[index]*area*BE*bmass/1000./factor
;       CH4 = CH4EF[index]*area*BE*bmass/1000./factor
;       NMHC = NMHCEF[index]*area*BE*bmass/1000./factor
;       H2 = H2EF[index]*area*BE*bmass/1000./factor
;       NOX = NOXEF[index]*area*BE*bmass/1000./factor
;       SO2 = SO2EF[index]*area*BE*bmass/1000./factor
;       PM25 = PM25EF[index]*area*BE*bmass/1000./factor
;       TPM = TPMEF[index]*area*BE*bmass/1000./factor
;       TC = TCEF[index]*area*BE*bmass/1000./factor
;       OC = OCEF[index]*area*BE*bmass/1000./factor
;       BC = BCEF[index]*area*BE*bmass/1000./factor
;       NH3 = NH3EF[index]*area*BE*bmass/1000./factor

       CO2 = CO2EF[index]*area*bmass/1000./factor
       CO = COEF[index]*area*bmass/1000./factor
       CH4 = CH4EF[index]*area*bmass/1000./factor
       NMHC = NMHCEF[index]*area*bmass/1000./factor
       H2 = H2EF[index]*area*bmass/1000./factor
       NOX = NOXEF[index]*area*bmass/1000./factor
       SO2 = SO2EF[index]*area*bmass/1000./factor
       PM25 = PM25EF[index]*area*bmass/1000./factor
       TPM = TPMEF[index]*area*bmass/1000./factor
       TC = TCEF[index]*area*bmass/1000./factor
       OC = OCEF[index]*area*bmass/1000./factor
       BC = BCEF[index]*area*bmass/1000./factor
       NH3 = NH3EF[index]*area*bmass/1000./factor

;	   bmass = bmass*BE ; changed this on 04/08/2009, so actual biomass burned is output; commented on 04/09/2009

 ; units being output are in kg/day/fire
; ####################################################
; Print to Output file
; ####################################################

printf,6,format = form, j,lon[j],lat[j],jd[j],time[j],lct[j],genveg,globreg[j],tree[j],herb[j], $
       bare[j],area,bmass,CO2,CO,OC,BC,NOX,NH3,SO2,NMHC,CH4,PM25,TPM

; ####################################################
; End loop over Fires
; ####################################################

skipfire:
endfor ; End loop over fires

    t1 = systime(1)-t0
; PRINT SUMMARY TO LOG FILE
printf, 9, ' '
printf, 9, 'The time to do this run was: '+ $
       strtrim(string(fix(t1)/60,t1 mod 60, $
       format='(i3,1h:,i2.2)'),2)+'.'
printf, 9, ' This run was done on: ', SYSTIME()
printf, 9, ' '
printf, 9, 'The total number of fires input was:', nfires
printf, 9, 'the total number of fires removed with confience < 20:', nfires-ngoodfires
printf, 9, 'The number of fires processed (ngoodfires):', ngoodfires
printf, 9, 'The number of fires removed for overlap:', overlapct
printf, 9, 'The total number of fires with confidence < 20: ', confnum
;printf, 9, ' The number of fires skipped due to spix > 2.5km:', spixct
printf, 9, ' The number of fires skipped due to lct<= 0 or lct > 17:', lct0
printf, 9, ' The number of fires skipped due to Global Region = Antarctica:', antarc
printf, 9, ' The number of fires skipped due to 100% bare cover:', allbare
printf, 9, ' The number of fires skipped due to problems with genveg:', genveg0
printf, 9, ' The number of fires skipped due to bmass assignments:', bmass0
printf, 9, ' The number of fires scaled to 100:', vcfcount
printf, 9, ' The number of fires with vcf < 50:', vcflt50
printf, 9, 'Total number of fires skipped:', spixct+lct0+antarc+allbare+genveg0+bmass0+confnum

; ***************************************************************
;           END PROGRAM
; ***************************************************************
    t1 = systime(1)-t0
    print,'Fire_emis> End Procedure in '+ $
       strtrim(string(fix(t1)/60,t1 mod 60, $
       format='(i3,1h:,i2.2)'),2)+'.'
    junk = check_math() ;This clears the math errors
    print, ' This run was done on: ', SYSTIME()
    close,/all   ;make sure ALL files are closed
end